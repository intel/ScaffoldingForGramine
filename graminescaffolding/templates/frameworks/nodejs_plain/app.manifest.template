sgx.debug = {{ sgx.debug|default(false) and 'true' or 'false' }}
sgx.remote_attestation = "{{ sgx.remote_attestation|default('dcap') }}"

{% raw -%}
{% set nodejs = '/usr/bin/node' -%}
{% endraw %}

loader.argv = ["{{'{{'}} nodejs }}", "/app/{{ application }}"]

{% raw -%}
loader.entrypoint = "file:{{ gramine.libos }}"
libos.entrypoint = "{{ nodejs }}"

loader.env.LD_LIBRARY_PATH = "/lib:/lib:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu"
{% for item in passthrough_env.split(':') if passthrough_env %}
loader.env.{{ item }} = { passthrough = true }
{% endfor %}

{# Node.js requires eventfd2() emulation otherwise fails on `(uv_loop_init(&tracing_loop_)) == (0)' #}
sys.insecure__allow_eventfd = true

fs.mounts = [
  { path = "/lib", uri = "file:{{ gramine.runtimedir() }}" },
  { path = "/lib/x86_64-linux-gnu", uri = "file:/lib/x86_64-linux-gnu" },
  { path = "/usr/lib/x86_64-linux-gnu", uri = "file:/usr/lib/x86_64-linux-gnu" },
  { path = "/usr/share/nodejs", uri = "file:/usr/share/nodejs" },
  { path = "{{ nodejs }}", uri = "file:{{ nodejs }}" },
  { path = "/app", uri = "file:/app" },

  { type = "tmpfs", path = "/tmp" },
]

sys.stack.size = "2M"
sys.enable_extra_runtime_domain_names_conf = true

sgx.nonpie_binary = true
sgx.enclave_size = "1G"
sgx.max_threads = 32

sgx.trusted_files = [
  "file:{{ gramine.libos }}",
  "file:{{ gramine.runtimedir() }}/",
  "file:/lib/x86_64-linux-gnu/",
  "file:/usr/lib/x86_64-linux-gnu/",
  "file:/usr/share/nodejs/",
  "file:{{ nodejs }}",
  "file:/app/",
  {% block trusted_files %}
  {% endblock %}
]
{% endraw %}

{#- vim: set ft=jinja : #}
